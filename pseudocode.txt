We want to create a Leaflet code for drill down and drill up functionality using JavaScript

The idea is as follows:

1) User will input n geojson files that correspond to a hierarchy of n layers on the leaflet map
   
   So we have n layers: l1, l2, l3, ... ln

   The hierarchy of layers is to be understood as follows:
    l1 -> l2 -> l3 -> l4 -> ... -> ln (drill down)
    l1 <- l2 <- l3 <- l4 <- ... <- ln (drill up)

2) This means there are n-1 possible drill downs and correspondingly n-1 possible drill ups

3) For each feature in each layer (except first layer l1), compute the centroid using turf.js function for centroid:
   turf.centroid(polygon)

4) Now we will have centroid arrays for each of the layers except the first layer, ie, we will have n-1 centroid arrays

5) We want to create relationship hashmaps for each parent-child layer pair
   
   So we first create a common relationship object that will store the relationship objects for each parent-child layer pair. For eg:

   relationship = {
    l1-l2 
   } 

6) Now consider a pair of parent and child layers (say l1 and l2)
   
   We want to run a nested for loop (2 for loops):

   - Outer for loop will loop over each feature of the parent layer:
     parent.features.forEach(...)
   
   - Inner for loop will loop over the centroid array of the child layer (l2 in this case) and check if each centroid belongs to the current parent feature using turf js BooleanPointInPolygon function:
   
   turf.booleanPointInPolygon(point, polygon);

   - if a centroid belongs to the parent feature, then push the